.PHONY: help build run test clean migrate-create migrate-up migrate-down migrate-status migrate-reset

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
BINARY_NAME=access-box
MIGRATIONS_DIR=./migrations
GOOSE_BIN=$(shell go env GOPATH)/bin/goose

# –ü–æ–º–æ—â—å
help: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É –ø–æ –∫–æ–º–∞–Ω–¥–∞–º
	@echo "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
	@grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = ":.*?## "}; {printf "\033[36m%-20s\033[0m %s\n", $$1, $$2}'

# –°–±–æ—Ä–∫–∞
build: ## –°–æ–±—Ä–∞—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
	go build -o $(BINARY_NAME) ./cmd/api

# –ó–∞–ø—É—Å–∫
run: build ## –°–æ–±—Ä–∞—Ç—å –∏ –∑–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
	./$(BINARY_NAME)

# –¢–µ—Å—Ç—ã
test: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã
	go test ./...

# –û—á–∏—Å—Ç–∫–∞
clean: ## –û—á–∏—Å—Ç–∏—Ç—å —Å–æ–±—Ä–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
	rm -f $(BINARY_NAME)

# –ú–∏–≥—Ä–∞—Ü–∏–∏
migrate-create: ## –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –º–∏–≥—Ä–∞—Ü–∏—é (–∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å: make migrate-create NAME=migration_name)
	@if [ -z "$(NAME)" ]; then echo "–û—à–∏–±–∫–∞: —É–∫–∞–∂–∏—Ç–µ NAME=migration_name"; exit 1; fi
	$(GOOSE_BIN) -dir $(MIGRATIONS_DIR) create $(NAME) sql

migrate-up: ## –ü—Ä–∏–º–µ–Ω–∏—Ç—å –≤—Å–µ –º–∏–≥—Ä–∞—Ü–∏–∏
	$(GOOSE_BIN) -dir $(MIGRATIONS_DIR) up

migrate-down: ## –û—Ç–∫–∞—Ç–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω—é—é –º–∏–≥—Ä–∞—Ü–∏—é
	$(GOOSE_BIN) -dir $(MIGRATIONS_DIR) down

migrate-status: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –º–∏–≥—Ä–∞—Ü–∏–π
	$(GOOSE_BIN) -dir $(MIGRATIONS_DIR) status

migrate-reset: ## –û—Ç–∫–∞—Ç–∏—Ç—å –≤—Å–µ –º–∏–≥—Ä–∞—Ü–∏–∏ (–û–°–¢–û–†–û–ñ–ù–û!)
	@echo "‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –≠—Ç–æ –æ—Ç–∫–∞—Ç–∏—Ç –í–°–ï –º–∏–≥—Ä–∞—Ü–∏–∏!"
	@read -p "–í—ã —É–≤–µ—Ä–µ–Ω—ã? –í–≤–µ–¥–∏—Ç–µ 'yes' –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: " confirm; \
	if [ "$$confirm" = "yes" ]; then \
		$(GOOSE_BIN) -dir $(MIGRATIONS_DIR) down-to 0; \
	else \
		echo "–û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞"; \
	fi

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Goose
install-goose: ## –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Goose CLI
	go install github.com/pressly/goose/v3/cmd/goose@latest

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ Goose
goose-version: ## –ü–æ–∫–∞–∑–∞—Ç—å –≤–µ—Ä—Å–∏—é Goose
	@echo "Goose —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤: $(GOOSE_BIN)"
	@echo "Goose –¥–æ—Å—Ç—É–ø–µ–Ω: $(shell test -f $(GOOSE_BIN) && echo "‚úÖ –î–∞" || echo "‚ùå –ù–µ—Ç")"

# –°–æ–∑–¥–∞–Ω–∏–µ Go –º–∏–≥—Ä–∞—Ü–∏–∏
migrate-create-go: ## –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é Go –º–∏–≥—Ä–∞—Ü–∏—é (–∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å: make migrate-create-go NAME=migration_name)
	@if [ -z "$(NAME)" ]; then echo "–û—à–∏–±–∫–∞: —É–∫–∞–∂–∏—Ç–µ NAME=migration_name"; exit 1; fi
	$(GOOSE_BIN) -dir $(MIGRATIONS_DIR) create $(NAME) go

# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –º–∏–≥—Ä–∞—Ü–∏–π
migrate-script: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å —Å–∫—Ä–∏–ø—Ç –º–∏–≥—Ä–∞—Ü–∏–π (–∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å: make migrate-script CMD=up|down|status|create|reset)
	@if [ -z "$(CMD)" ]; then echo "–û—à–∏–±–∫–∞: —É–∫–∞–∂–∏—Ç–µ CMD=–∫–æ–º–∞–Ω–¥–∞"; exit 1; fi
	./scripts/migrate.sh $(CMD)

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –º–∏–≥—Ä–∞—Ü–∏–π
migrate-list: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –º–∏–≥—Ä–∞—Ü–∏–π
	@echo "üìÅ –§–∞–π–ª—ã –º–∏–≥—Ä–∞—Ü–∏–π –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ $(MIGRATIONS_DIR):"
	@ls -la $(MIGRATIONS_DIR) || echo "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –º–∏–≥—Ä–∞—Ü–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
